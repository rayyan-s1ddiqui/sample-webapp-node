name: Deploy to AWS ECS via CodeDeploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-2
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: pharmacy-repo
  ECS_CLUSTER: pharmacy-cluster
  ECS_SERVICE: pharmacy-service
  CODEDEPLOY_APP: pharmacy-codedeploy-app
  CODEDEPLOY_GROUP: pharmacy-deployment-group
  IMAGE_TAG: latest

jobs:
  deploy:
    name: Deploy to AWS ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build, tag, and push Docker image
        run: |
          IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "TASK_DEFINITION_ARN=$(aws ecs describe-services --cluster $ECS_CLUSTER --services $ECS_SERVICE --query 'services[0].taskDefinition' --output text)" >> $GITHUB_ENV

      - name: Install dependencies for Boto3
        run: |
          python -m pip install --upgrade pip
          pip install boto3

      - name: Trigger AWS CodeDeploy
        run: python trigger_deploy.py
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          CODEDEPLOY_APP: ${{ env.CODEDEPLOY_APP }}
          CODEDEPLOY_GROUP: ${{ env.CODEDEPLOY_GROUP }}
          TASK_DEFINITION_ARN: ${{ env.TASK_DEFINITION_ARN }}
